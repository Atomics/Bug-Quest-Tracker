<?php

/**
 * BasepeanutPage
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $title
 * @property clob $content
 * @property clob $excerpt
 * @property integer $author
 * @property string $status
 * @property sfGuardUser $sfGuardUser
 * 
 * @method string      getTitle()       Returns the current record's "title" value
 * @method clob        getContent()     Returns the current record's "content" value
 * @method clob        getExcerpt()     Returns the current record's "excerpt" value
 * @method integer     getAuthor()      Returns the current record's "author" value
 * @method string      getStatus()      Returns the current record's "status" value
 * @method sfGuardUser getSfGuardUser() Returns the current record's "sfGuardUser" value
 * @method peanutPage  setTitle()       Sets the current record's "title" value
 * @method peanutPage  setContent()     Sets the current record's "content" value
 * @method peanutPage  setExcerpt()     Sets the current record's "excerpt" value
 * @method peanutPage  setAuthor()      Sets the current record's "author" value
 * @method peanutPage  setStatus()      Sets the current record's "status" value
 * @method peanutPage  setSfGuardUser() Sets the current record's "sfGuardUser" value
 * 
 * @package    peanut
 * @subpackage model
 * @author     Alexandre pocky BALMES
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasepeanutPage extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('peanut_page');
        $this->hasColumn('title', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('content', 'clob', null, array(
             'type' => 'clob',
             'notnull' => true,
             ));
        $this->hasColumn('excerpt', 'clob', null, array(
             'type' => 'clob',
             ));
        $this->hasColumn('author', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('status', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             'values' => 
             array(
              0 => 'draft',
              1 => 'publish',
             ),
             'default' => 'draft',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('sfGuardUser', array(
             'local' => 'author',
             'foreign' => 'id'));

        $sluggable0 = new Doctrine_Template_Sluggable(array(
             'fields' => 
             array(
              0 => 'title',
             ),
             ));
        $timestampable0 = new Doctrine_Template_Timestampable();
        $sortable0 = new Doctrine_Template_Sortable();
        $nestedset0 = new Doctrine_Template_NestedSet(array(
             'hasManyRoots' => true,
             'rootColumnName' => 'root_id',
             ));
        $this->actAs($sluggable0);
        $this->actAs($timestampable0);
        $this->actAs($sortable0);
        $this->actAs($nestedset0);
    }
}